#
# Dockerfile for building ROS2 from source
#
ARG BASE_IMAGE
FROM ${BASE_IMAGE}

ARG ROS_PACKAGE=ros_base \
    ROS_VERSION=humble

ENV ROS_DISTRO=${ROS_VERSION} \
    ROS_ROOT=/opt/ros/${ROS_VERSION} \
    ROS_PYTHON_VERSION=3 \
    RMW_IMPLEMENTATION=rmw_fastrtps_cpp \
    RTI_NC_LICENSE_ACCEPTED=yes \
    DEBIAN_FRONTEND=noninteractive \
    SHELL=/bin/bash \
    TMP=/tmp/ros2
    
SHELL ["/bin/bash", "-c"] 

# set Python3 as default
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1

# build ROS from source
COPY ros2_build.sh rosdeps.yml $TMP/
RUN $TMP/ros2_build.sh || touch $TMP/.ros.build.failed

# this retains the stage above for debugging on build failure
RUN if [ -f $TMP/.ros.build.failed ]; then \
      echo "ROS ${ROS_DISTRO} build failed!"; \
      exit 1; \
    fi

# on 24.04, the older colcon-argcomplete that ROS installs conflicts with the venv one
RUN if [ $(lsb_release -rs) = '24.04' ]; then \ 
      echo "#!/usr/bin/env bash" > "/opt/venv/bin/register-python-argcomplete" ; \
    fi

# sometimes numpy2 gets installed when numpy<2 was expected, or vice versa
RUN /tmp/numpy/install.sh && /tmp/cmake/install.sh

# Set the default DDS middleware to cyclonedds
# https://github.com/ros2/rclcpp/issues/1335
# https://docs.ros.org/en/jazzy/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.html
#ENV RMW_IMPLEMENTATION=rmw_cyclonedds_cpp

# commands will be appended/run by the entrypoint which sources the ROS environment
COPY ros_entrypoint.sh ros_environment.sh ros2_install.sh /

ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["/bin/bash"]

